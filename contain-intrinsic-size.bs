<pre class='metadata'>
Title: CSS Contain Intrinsic Size
Shortname: css-contain-intrinsic-size
Level: 1
Status: UD
Group: csswg
Work Status: exploring
URL: https://wicg.github.io/display-locking/contain-intrinsic-size.html
Editor: Tab Atkins-Bittner, Google
Editor: Vladimir Levin, Google
Abstract: This spec introduces a contain-intrinsic-size property, which allows
          authors to specify an element's intrinsic size when [=size containment=]
          is present.  In effect, this feature extends [=size containment=] by 
          letting the developer specify the placeholder size to apply when the
          element's children are not considered.
</pre>

Introduction {#intro}
============

When [=size containment=] is specified, the element does not consider its
children when determining its intrinsic size, which in turn can affect the
element's [=principal box=] size. This is beneficial for performance, as it can
allow the user-agent to skip processing layout of elements in the size
contained subtrees. However, it also makes it difficult to create responsive
design content, since the element needs to be sized for it to take up layout
space.

The proposed property, 'contain-intrinsic-size', allows the developer to
specify a size that replaces the intrinsic size when [=size containment=] is
specified. This means that [=size containment=] can be toggled on and off, with
the element either considering the specified value or its children for
intrinsic sizing. This is particularly helpful for features such as <a
href="https://wicg.github.io/display-locking/">''subtree-visibility''</a>, which
can apply [=size containment=] automatically.

The 'contain-intrinsic-size' property {#contain-intrinsic-size}
=====================================

<pre class=propdef>
Name: contain-intrinsic-size
Value: auto | <<length>>{1,2}
Initial: auto
Inherited: no
Applies to: elements with [=size containment=]
</pre>

<dl dfn-type=value dfn-for=contain-intrinsic-size>
    : <dfn>auto</dfn>
    :: No effect; the element is sized as usual.

    : <<length>>{1,2}
    :: If the element is not under [=size containment=], this value has no
         effect.

         Otherwise,
             * The first <<length>> specifies the [=min-content size=] and
                 the [=max-content size=] for the [=physical=] width direction
                 of the element's [=principal box=].
             * The second <<length>> specifies the
                 [=min-content size=] and the [=max-content size=] for the
                 [=physical=] height direction of the element's [=principal
                 box=]. 

         If one <<length>> is provided, the second length defaults to the same
         value as the first one.
</dl>

Examples {#examples}
========

<div class=example>
  <xmp highlight=markup>
    <style>
    #one {
      contain-intrinsic-size: 10px 20px;
      contain: size;
    }
    #two {
      contain-intrinsic-size: 10px 20px;
    }
    #three {
      contain-intrinsic-size: 50px;
      contain: size;
      width: max-content;
    }
    #four {
      contain-intrinsic-size: 50px;
      contain: size;
      width: 27px;
      height: 42px;
    }
    .child {
      width: 123px;
      height: 321px;
    }
    </style>

    <div id=one><div class=child></div></div>
    <div id=two><div class=child></div></div>
    <div id=three><div class=child></div></div>
    <div id=four><div class=child></div></div>
  </xmp>

  * Element #one has [=size containment=], so it uses the specified
      'contain-intrinsic-size' for its intrinsic size. Since divs by default
      take up the [=available space=] in the inline direction, the element is
      sized to available width and 20px height. Note that the child's size is
      ignored due to the element's [=size containment=].
  * Element #two does not have [=size containment=], so the specified
      'contain-intrinsic-size' has no effect. The element considers its child's
      size for the intrinsic sizing information. The element is sized to
      available width and 321px height.
  * Element #three has [=size containment=], so it uses the specified
      'contain-intrinsic-size' for its intrinsic size. Furthmore, it has
      specified 'width: [=max-content=]'. Thus the final box is sized to 50px
      width and 50px height. The child's size is ignored.
  * Element #four has [=size containment=], so it uses the specified
      'contain-intrinsic-size' for its intrinsic size. However, both width and
      height are also specified, so the intrinsic size does not contribute to
      the element's final size. The element is sized to 27px width and 42px
      height. The child's size is ignored.

</div>

Privacy & Security Considerations {#priv-sec}
=================================

This feature does not impact the privacy or security of the web. See
<a href="https://wicg.github.io/display-locking/contain-intrinsic-size-security-and-privacy-assessment.md">
the completed privacy questionnaire</a> for more details.
